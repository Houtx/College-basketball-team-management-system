<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ubtms.module.user.dao.UserMapper">
    <resultMap id="BaseResultMap" type="ubtms.module.user.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="state" property="state" jdbcType="TINYINT"/>
        <result column="height" property="height" jdbcType="REAL"/>
        <result column="weight" property="weight" jdbcType="REAL"/>
        <result column="grade" property="grade" jdbcType="VARCHAR"/>
        <result column="shirt_num" property="shirtNum" jdbcType="TINYINT"/>
        <result column="duty" property="duty" jdbcType="TINYINT"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
    </resultMap>


    <resultMap id="ResultMapWithBLOBs" type="ubtms.module.user.entity.User" extends="BaseResultMap">
        <result column="head_pic" property="headPic" jdbcType="LONGVARCHAR"/>
    </resultMap>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, phone, password, real_name, sex, state, height, weight, grade, shirt_num, duty, 
    role_id
  </sql>
    <sql id="Blob_Column_List">
    head_pic
  </sql>


    <select id="selectByUserQuery" resultType="ubtms.module.user.entity.User">
    SELECT
        `user`.id,
        `user`.phone,
        `user`.`password`,
        `user`.real_name,
        `user`.sex,
        `user`.head_pic,
        `user`.state,
        `user`.height,
        `user`.weight,
        `user`.grade,
        `user`.shirt_num,
        `user`.duty,
        `user`.role_id
        FROM
        `user`
        INNER JOIN role ON `user`.role_id = role.id
        INNER JOIN school ON role.school_id = school.sch_id
        <where>
            <if test="schoolId!=null">
                sch_id = #{schoolId}
            </if>
            <if test="schoolName!=null">
                AND sch_name = #{schoolName}
            </if>
            <if test="roleId!=null">
                AND role.id = #{roleId}
            </if>
            <if test="roleName!=null">
                AND role_name = #{roleName}
            </if>
        </where>

  </select>

    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="ubtms.module.user.entity.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="ubtms.module.user.entity.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>

    <select id="select" resultType="ubtms.module.user.entity.User">
        select * from user
        <where>
            <if test="id!= null">
                id = #{id}
            </if>
            <if test="phone != null">
                AND phone like #{phone}
            </if>
            <if test="password != null">
                AND password like #{password}
            </if>
            <if test="realName != null">
                AND real_name like #{realName}
            </if>

            <if test="sex != null">
                AND sex like #{sex}
            </if>
            <if test="state != null">
                AND state like #{state}
            </if>
            <if test="grade != null">
                AND grade like #{grade}
            </if>
            <if test="duty != null">
                AND duty like #{duty}
            </if>
        </where>
    </select>

    <select id="countWithRelative" resultType="int">
        SELECT count(*)
        FROM
        `user`
        INNER JOIN role ON `user`.role_id = role.id
        INNER JOIN school ON role.school_id = school.sch_id
        <where>
            <if test="role.schoolId!=null">
                school.sch_id=#{role.schoolId}
            </if>
            <if test="realName!=null">
                AND `user`.real_name=#{realName}
            </if>
        </where>
    </select>

    <select id="selectWithRelative" resultType="User">
        SELECT
        `user`.id,
        `user`.phone,
        `user`.`password`,
        `user`.real_name,
        `user`.sex,
        `user`.head_pic,
        `user`.state,
        `user`.height,
        `user`.weight,
        `user`.grade,
        `user`.shirt_num,
        `user`.duty,
        `user`.role_id
        FROM
        `user`
        INNER JOIN role ON `user`.role_id = role.id
        INNER JOIN school ON role.school_id = school.sch_id
        <where>
            <if test="data.role.schoolId!=null">
                school.sch_id=#{data.role.schoolId}
            </if>
            <if test="data.realName!=null">
                AND `user`.real_name=#{data.realName}
            </if>
        </where>
        <if test="limit!=null">
            limit #{offset},#{limit}
        </if>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="ubtms.module.user.entity.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="ubtms.module.user.entity.User">
    insert into user (id, phone, password, 
      real_name, sex, state, 
      height, weight, grade, shirt_num, 
      duty, role_id, head_pic
      )
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, 
      #{height,jdbcType=REAL}, #{weight,jdbcType=REAL}, #{grade,jdbcType=VARCHAR}, #{shirtNum,jdbcType=TINYINT}, 
      #{duty,jdbcType=TINYINT}, #{roleId,jdbcType=INTEGER}, #{headPic,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="ubtms.module.user.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="height != null">
                height,
            </if>
            <if test="weight != null">
                weight,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="shirtNum != null">
                shirt_num,
            </if>
            <if test="duty != null">
                duty,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="headPic != null">
                head_pic,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
            <if test="height != null">
                #{height,jdbcType=REAL},
            </if>
            <if test="weight != null">
                #{weight,jdbcType=REAL},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
            <if test="shirtNum != null">
                #{shirtNum,jdbcType=TINYINT},
            </if>
            <if test="duty != null">
                #{duty,jdbcType=TINYINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="headPic != null">
                #{headPic,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="ubtms.module.user.entity.UserExample" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.realName != null">
                real_name = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=TINYINT},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=TINYINT},
            </if>
            <if test="record.height != null">
                height = #{record.height,jdbcType=REAL},
            </if>
            <if test="record.weight != null">
                weight = #{record.weight,jdbcType=REAL},
            </if>
            <if test="record.grade != null">
                grade = #{record.grade,jdbcType=VARCHAR},
            </if>
            <if test="record.shirtNum != null">
                shirt_num = #{record.shirtNum,jdbcType=TINYINT},
            </if>
            <if test="record.duty != null">
                duty = #{record.duty,jdbcType=TINYINT},
            </if>
            <if test="record.roleId != null">
                role_id = #{record.roleId,jdbcType=INTEGER},
            </if>
            <if test="record.headPic != null">
                head_pic = #{record.headPic,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update user
        set id = #{record.id,jdbcType=INTEGER},
        phone = #{record.phone,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        real_name = #{record.realName,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=TINYINT},
        state = #{record.state,jdbcType=TINYINT},
        height = #{record.height,jdbcType=REAL},
        weight = #{record.weight,jdbcType=REAL},
        grade = #{record.grade,jdbcType=VARCHAR},
        shirt_num = #{record.shirtNum,jdbcType=TINYINT},
        duty = #{record.duty,jdbcType=TINYINT},
        role_id = #{record.roleId,jdbcType=INTEGER},
        head_pic = #{record.headPic,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set id = #{record.id,jdbcType=INTEGER},
        phone = #{record.phone,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        real_name = #{record.realName,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=TINYINT},
        state = #{record.state,jdbcType=TINYINT},
        height = #{record.height,jdbcType=REAL},
        weight = #{record.weight,jdbcType=REAL},
        grade = #{record.grade,jdbcType=VARCHAR},
        shirt_num = #{record.shirtNum,jdbcType=TINYINT},
        duty = #{record.duty,jdbcType=TINYINT},
        role_id = #{record.roleId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="ubtms.module.user.entity.User">
        update user
        <set>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="height != null">
                height = #{height,jdbcType=REAL},
            </if>
            <if test="weight != null">
                weight = #{weight,jdbcType=REAL},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=VARCHAR},
            </if>
            <if test="shirtNum != null">
                shirt_num = #{shirtNum,jdbcType=TINYINT},
            </if>
            <if test="duty != null">
                duty = #{duty,jdbcType=TINYINT},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="headPic != null">
                head_pic = #{headPic,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="ubtms.module.user.entity.User">
    update user
    set phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      height = #{height,jdbcType=REAL},
      weight = #{weight,jdbcType=REAL},
      grade = #{grade,jdbcType=VARCHAR},
      shirt_num = #{shirtNum,jdbcType=TINYINT},
      duty = #{duty,jdbcType=TINYINT},
      role_id = #{roleId,jdbcType=INTEGER},
      head_pic = #{headPic,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="ubtms.module.user.entity.User">
    update user
    set phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      height = #{height,jdbcType=REAL},
      weight = #{weight,jdbcType=REAL},
      grade = #{grade,jdbcType=VARCHAR},
      shirt_num = #{shirtNum,jdbcType=TINYINT},
      duty = #{duty,jdbcType=TINYINT},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>