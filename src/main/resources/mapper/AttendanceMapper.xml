<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ubtms.module.attendance.dao.AttendanceMapper" >
  <resultMap id="BaseResultMap" type="ubtms.module.attendance.entity.Attendance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="attend" property="attend" jdbcType="TINYINT" />
    <result column="absence_type" property="absenceType" jdbcType="TINYINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, attend, absence_type, user_id, date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="ubtms.module.attendance.entity.AttendanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attendance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultType="ubtms.module.attendance.dto.AttendanceDto" parameterType="java.lang.Integer" >
    SELECT
    attendance.id,
    attendance.attend,
    attendance.absence_type,
    attendance.user_id,
    attendance.date,
    school.sch_name AS school_name,
    `user`.real_name AS user_name
    FROM
    attendance
    INNER JOIN `user` ON attendance.user_id = `user`.id
    INNER JOIN role ON `user`.role_id = role.id
    INNER JOIN school ON role.school_id = school.sch_id
    where attendance.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from attendance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ubtms.module.attendance.entity.AttendanceExample" >
    delete from attendance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ubtms.module.attendance.entity.Attendance" >
    insert into attendance (id, attend, absence_type, 
      user_id, date)
    values (#{id,jdbcType=INTEGER}, #{attend,jdbcType=TINYINT}, #{absenceType,jdbcType=TINYINT}, 
      #{userId,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="ubtms.module.attendance.entity.Attendance" >
    insert into attendance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="attend != null" >
        attend,
      </if>
      <if test="absenceType != null" >
        absence_type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="attend != null" >
        #{attend,jdbcType=TINYINT},
      </if>
      <if test="absenceType != null" >
        #{absenceType,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="countByMngQuery" resultType="int">
    SELECT
    count(attendance.id)
    FROM
    attendance
    INNER JOIN `user` ON attendance.user_id = `user`.id
    INNER JOIN role ON `user`.role_id = role.id
    INNER JOIN school ON role.school_id = school.sch_id
    <where>
      <if test="date!=null">
        attendance.date >= #{date} AND attendance.date &lt; #{endDate}
      </if>
      <if test="schoolName!=null">
        AND school.sch_name LIKE "%"#{schoolName}"%"
      </if>
      <if test="stuName!=null">
        AND `user`.real_name LIKE "%"#{stuName}"%"
      </if>
      <if test="attend!=null">
        AND attendance.attend = #{attend}
      </if>
      <if test="absenceType!=null">
        AND attendance.absence_type = #{absenceType}
      </if>
    </where>
  </select>

  <select id="selectByMngQuery" resultType="ubtms.module.attendance.dto.AttendanceDto">
    SELECT
    attendance.id,
    attendance.attend,
    attendance.absence_type,
    attendance.user_id,
    attendance.date,
    school.sch_name AS school_name,
    `user`.real_name AS user_name
    FROM
    attendance
    INNER JOIN `user` ON attendance.user_id = `user`.id
    INNER JOIN role ON `user`.role_id = role.id
    INNER JOIN school ON role.school_id = school.sch_id
    <where>
      <if test="date!=null">
        attendance.date >= #{date} AND attendance.date &lt; #{endDate}
      </if>
      <if test="schoolName!=null">
        AND school.sch_name LIKE "%"#{schoolName}"%"
      </if>
      <if test="stuName!=null">
        AND `user`.real_name LIKE "%"#{stuName}"%"
      </if>
      <if test="attend!=null">
        AND attendance.attend = #{attend}
      </if>
      <if test="absenceType!=null">
        AND attendance.absence_type = #{absenceType}
      </if>
      <if test="userId!=null">
        AND attendance.user_id = #{userId}
      </if>
    </where>

    <if test="limit != null">
      limit #{offset},#{limit}
    </if>

  </select>


  <select id="countByExample" parameterType="ubtms.module.attendance.entity.AttendanceExample" resultType="java.lang.Integer" >
    select count(*) from attendance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update attendance
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.attend != null" >
        attend = #{record.attend,jdbcType=TINYINT},
      </if>
      <if test="record.absenceType != null" >
        absence_type = #{record.absenceType,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update attendance
    set id = #{record.id,jdbcType=INTEGER},
      attend = #{record.attend,jdbcType=TINYINT},
      absence_type = #{record.absenceType,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ubtms.module.attendance.entity.Attendance" >
    update attendance
    <set >
      <if test="attend != null" >
        attend = #{attend,jdbcType=TINYINT},
      </if>
      <if test="absenceType != null" >
        absence_type = #{absenceType,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ubtms.module.attendance.entity.Attendance" >
    update attendance
    set attend = #{attend,jdbcType=TINYINT},
      absence_type = #{absenceType,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>